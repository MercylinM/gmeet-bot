# PipeWire configuration file for virtual audio devices
context.properties = {
    # Configure properties for the entire context
    log.level = 2
    default.clock.rate = 48000
    default.clock.quantum = 1024
    default.clock.min-quantum = 32
    default.clock.max-quantum = 8192
}

context.spa-libs = {
    # Define the SPA libraries to load
    audio.convert.* = audioconvert/libspa-audioconvert
    support.*       = support/libspa-support
}

context.modules = [
    # Load the modules we need
    { name = libpipewire-module-rtkit
        args = {
            nice.level   = -11
            rt.prio      = 88
            rt.time.soft = 200000
            rt.time.hard = 200000
        }
        flags = [ ifexists nofail ]
    }
    { name = libpipewire-module-protocol-native }
    { name = libpipewire-module-client-node }
    { name = libpipewire-module-adapter }
    { name = libpipewire-module-metadata }
    { name = libpipewire-module-session-manager }
]

context.objects = [
    # Define a virtual sink for audio output
    { factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "virtual_output"
            node.description = "Virtual Output"
            media.class = "Audio/Sink"
            audio.position = [ FL FR ]
        }
    }
    # Define a virtual source for audio input (monitor of the sink)
    { factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "virtual_input"
            node.description = "Virtual Input"
            media.class = "Audio/Source"
            audio.position = [ FL FR ]
        }
    }
]

context.exec = [
    # Execute any commands at startup
    { path = "/usr/bin/pipewire" args = "" }
    { path = "/usr/bin/wireplumber" args = "" }
]